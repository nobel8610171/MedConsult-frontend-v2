{"version":3,"sources":["containers/ChestReportPage.js","functions/Utils.js","components/Loading.js","components/Chat.js","data/ClinicSchedule.js","containers/MessageRoomPage.js","containers/AskKeyPage.js","functions/UseScript.js","App.js","reportWebVitals.js","serviceWorker.js","index.js","img/old.png","img/chatgpt.png"],"names":["ChestReportPage","_ref","setReport","_useState","useState","_useState2","_slicedToArray","fileObj","setFileObj","_useState3","_useState4","fileArray","setFileArray","_useState5","_useState6","setPredictedReport","useEffect","length","tmp_array","i","push","URL","createObjectURL","buildFileArray","React","createElement","className","map","url","src","alt","type","onChange","e","target","files","multiple","onClick","preventDefault","formData","FormData","append","t0","performance","now","axios","post","then","response","predicted_report","data","t1","console","log","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","padTo2Digits","num","toString","padStart","formatDate","date","getMonth","getDate","join","getHours","getMinutes","getSeconds","validateApiKey","_x","_validateApiKey","apply","arguments","_asyncToGenerator","_callee","apiKey","headers","jsonData","_context","content-type","Authorization","concat","messages","role","content","model","disableButton","buttonRef","current","style","cursor","pointerEvents","opacity","enableButton","a","document","body","appendChild","Loading","Chat","audio","transcription","chat","setTranscriptionTime","chatTime","setChatTime","Date","margin","controls","Fragment","old","chatgptlogo","ClinicSchedule","MessageRoomPage","report","setApiKey","audios","setAudios","transcriptions","setTranscriptions","chats","setChats","_useState7","_useState8","_useState9","_useState10","summary","setSummary","_useState11","_useState12","clinic","setClinic","summaryButtonRef","useRef","reportLoadingRef","bottomLineRef","recordButtonRef","clearButtonRef","chatgptModel","urlForChatgpt","sendAudioRequest","_ref2","blob","text","sendChatRequest","_x3","_sendChatRequest","_callee7","_context7","choices","message","sendRequests","_x4","_x5","_sendRequests","_callee8","audioUrl","audioBlob","_context8","_toConsumableArray","addAudioElement","_ref3","_callee2","_context2","display","_x6","sendSummaryRequest","_ref4","_callee3","_response","_chat","_context3","status","_x7","_x8","_x9","sendClinicRequest","_ref5","_callee4","_i","_response2","_chat2","_context4","_x10","_x11","_x12","generateReport","_ref6","_callee5","_context5","resetConversation","marginTop","align","index","ref","marginBottom","paddingBottom","AudioRecorder","onRecordingComplete","fontSize","AskKeyPage","inputRef","errorRef","handleKeyDown","event","visibility","handleClick","_x2","onKeyDown","color","useScript","integrity","crossOrigin","script","removeChild","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","getCLS","getFID","getFCP","getLCP","getTTFB","Boolean","window","location","hostname","match","ReactDOM","createRoot","getElementById","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","module","p"],"mappings":"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","file":"static/js/main.6be7f798.chunk.js","sourcesContent":["import '../App.css';\nimport axios from 'axios';\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect, useState, useRef } from \"react\";\n\nconst ChestReportPage = ({setReport}) => {\n\n    const [fileObj, setFileObj] = useState([]);\n    const [fileArray, setFileArray] = useState([]);\n    const [predictedReport, setPredictedReport] = useState(\"\");\n\n    function buildFileArray() {\n        var tmp_array = [];\n        for (let i = 0; i < fileObj[0].length; i++) {\n            tmp_array.push(URL.createObjectURL(fileObj[0][i]))\n        }\n        setFileArray(tmp_array)\n    }\n\n    const uploadMultipleFiles = (e) => {\n        setFileObj([e.target.files])\n    }\n\n    useEffect(() => {\n        if (fileObj.length == 0) return;\n        buildFileArray()\n    }, [fileObj])\n    \n    const uploadFiles = (e) => {\n        e.preventDefault()\n        //console.log(fileArray)\n        const formData = new FormData()\n        formData.append('file1', fileObj[0][0], 'img1.jpg')\n        formData.append('file2', fileObj[0][1], 'img2.jpg')\n        var t0 = performance.now();\n        axios.post('http://localhost:5000/upload', formData)\n        .then(function(response, predicted_report) {\n            predicted_report = response.data\n            setPredictedReport(predicted_report)\n            setReport(predicted_report)\n            var t1 = performance.now();\n            console.log(\"The time it took to predict the image \" + (t1 - t0) + \" milliseconds.\")\n        })\n    }\n\n    const goToChat = (e) => {\n        \n    }\n\n    //useEffect(() => {\n    //    if (fileArray.length == 0) return;\n    //    console.log(fileArray)\n    //    alert(fileArray.length)\n    //}, [fileArray])\n\n    return (\n        <div className=\"App\">\n          <header className=\"App-header\">\n            <div className=\"App-upload\">\n              <p>\n                Upload images for report generation\n              </p>\n            </div>\n            <div className=\"form-group multi-preview\">\n                {(fileArray || []).map(url => (\n                    <img src={url} alt=\"...\" />\n                ))}\n            </div>\n            <div className=\"form-group\">\n                <input type=\"file\" className=\"form-control\" onChange={uploadMultipleFiles} multiple />\n            </div>\n            <button type=\"button\" className=\"btn btn-danger btn-block\" onClick={uploadFiles}>Upload</button>\n          </header>\n        </div>\n      );\n}\n\nexport default ChestReportPage;\n","import axios from \"axios\";\n\nfunction padTo2Digits(num) {\n  return num.toString().padStart(2, '0');\n}\n\nfunction formatDate(date) {\n  return (\n    [\n    //   date.getFullYear(),\n      padTo2Digits(date.getMonth() + 1),\n      padTo2Digits(date.getDate()),\n    ].join('/') +\n    ' ' +\n    [\n      padTo2Digits(date.getHours()),\n      padTo2Digits(date.getMinutes()),\n      padTo2Digits(date.getSeconds()),\n    ].join(':')\n  );\n}\n\nasync function validateApiKey(apiKey){\n  const chatgptModel = \"gpt-3.5-turbo\";\n  const urlForChatgpt = \"https://api.openai.com/v1/chat/completions\";\n  try{\n      const headers = {\n          \"content-type\": \"application/json\",\n          \"Authorization\": `Bearer ${apiKey}`\n      };\n      const messages = [\n              {\"role\": \"user\", \"content\": \"Hello!\"}\n          ]\n      const jsonData = {messages: messages, model: chatgptModel}\n      const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n      return true;\n  }\n  catch (error) {\n      console.log(error);\n      return false;\n  }\n}\n\nfunction disableButton(buttonRef) {\n  buttonRef.current.style.cursor = \"not-allowed\";\n  buttonRef.current.style.pointerEvents = \"none\";\n  buttonRef.current.style.opacity = \"0.6\";\n}\n\nfunction enableButton(buttonRef) {\n  buttonRef.current.style.cursor = \"pointer\";\n  buttonRef.current.style.pointerEvents = \"auto\";\n  buttonRef.current.style.opacity = \"1\";\n}\n\nconst onRenderDocument = ({blob, filename}) => {\n  var blobUrl = URL.createObjectURL(blob);\n  saveDocument(blobUrl, filename);\n};\n\nconst saveDocument = (function () {\n  var a = document.createElement(\"a\");\n  document.body.appendChild(a);\n  a.style = \"display: none\";\n  return function (blob, fileName) {\n    a.href = blob;\n    a.download = fileName;\n    a.click();\n    window.URL.revokeObjectURL(blob);\n  };\n}());\n\nexport {formatDate, validateApiKey, disableButton, enableButton, onRenderDocument, saveDocument};","import '../App.css';\nimport React from \"react\";\n\nconst Loading = () => {\n\treturn (\n\t\t<div className=\"spinner\">\n\t\t\t<div className=\"bounce1\"></div>\n\t\t\t<div className=\"bounce2\"></div>\n\t\t\t<div className=\"bounce3\"></div>\n\t\t</div>\t\t\t\t\t\t\n\t)\n}\n\nexport default Loading;","import '../App.css';\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\n\nimport {formatDate} from '../functions/Utils';\nimport Loading from './Loading';\n\nimport old from '../img/old.png';\nimport chatgptlogo from '../img/chatgpt.png'\n\n//const Chat = ({audio, transcription, translation, chat}) => {\nconst Chat = ({audio, transcription, chat}) => {\n\tconst [transcriptionTime, setTranscriptionTime] = useState(\"\");\n\tconst [translationTime, setTranslationTime] = useState(\"\");\n\tconst [chatTime, setChatTime] = useState(\"\");\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranscriptionTime(formatDate(date));\n\t}, [transcription]);\n\t\n\t/*useEffect(() => {\n\t\tconst date = new Date();\n\t\tsetTranslationTime(formatDate(date));\n\t}, [translation])*/\n\n\tuseEffect(() => {\n\t\tconst date = new Date();\n\t\tsetChatTime(formatDate(date));\n\t}, [chat])\n\n\treturn (\n\t\t<div style={{margin:\"20px\"}}>\n\t\t\t{/* <div className='msg-inbox'>\n\t\t\t<div className='chats'> */}\n\t\t\t<div className='msg-page'>\n\t\t\t\t<div className=\"sent-chats\">\n\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t{\n\t\t\t\t\t\t// Set this to be null to avoid situation that return is empty\n\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<audio controls=\"True\" src={audio}></audio>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{\n\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t<p>{transcription}</p>\n\t\t\t\t\t\t\t\t{/* <span className=\"chat-time\">{transcriptionTime}</span> */}\n\t\t\t\t\t\t\t\t{/*translation !== null\n\t\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t\t\t<p style={{marginTop:\"1px\"}}>{translation}</p>\n\t\t\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</>\t\n\t\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t*/}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\taudio !== null\n\t\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t<img className='chats-img' src={old} alt=\"old.png\"/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{/* <div className=\"sent-chats\">\n\t\t\t\t\t{\n\t\t\t\t\ttranslation !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='sent-chats-msg'>\n\t\t\t\t\t\t\t\t<div className='sent-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{translation}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{translationTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='sent-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t\ttranscription !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div> */}\n\t\t\t\t<div className=\"received-chats\">\n\t\t\t\t\t{\n\t\t\t\t\tchat !== null\n\t\t\t\t\t\t?\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<div className='received-chats-img'>\n\t\t\t\t\t\t\t\t<img className='chats-img' src={chatgptlogo} alt=\"chatgpt.png\"/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='received-msg'>\n\t\t\t\t\t\t\t\t<div className='received-msg-inbox'>\n\t\t\t\t\t\t\t\t\t<p>{chat}</p>\n\t\t\t\t\t\t\t\t\t<span className=\"chat-time\">{chatTime}</span>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</>\n\t\t\t\t\t\t: \n\t\t\t\t\t\t<Loading/>\n\t\t\t\t\t\t/*translation !== null\n\t\t\t\t\t\t\t?\n\t\t\t\t\t\t\t\t<Loading/>\t\t\t\t\t\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t<></>*/\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t{/* </div>\n\t\t\t</div> */}\n\t\t\t</div>\n\t\t</div>\n\t)\n\n}\n\nexport default Chat;","const ClinicSchedule = [\n\t\"Department: Department of Obstetrics and Gynecology, Specialty: General Obstetrics and Gynecology, Clinic Hours: Sunday morning, 7:30 AM - 9:00 AM, Doctor: Dr. Lin Hejian\",\n\t\"Department: Department of Orthopedics, Specialty: General Orthopedics, Clinic Hours: Thursday morning, 5:00 AM - 7:00 AM, Doctor: Dr. Wang Zhendi\",\n\t\"Department: Department of Internal Medicine, Specialty: Gastrointestinal Surgery, Clinic Hours: Monday afternoon, 4:00 PM - 5:00 PM, Doctor: Dr. Wu Liyang\",\n\t\"Department: Department of Internal Medicine, Specialty: Cerebrovascular Disease, Stroke, Clinic Hours: Friday afternoon, 7:00 PM - 9:00 PM, Doctor: Dr. Wu Zihao\",\n\t\"Department: Department of Pediatrics, Specialty: General Pediatric Diseases, Clinic Hours: Sunday morning, 6:30 AM - 8:00 AM, Doctor: Dr. Lin Xiaoming\",\n\t\"Department: Department of Pulmonology, Clinic Hours: Sunday morning, 9:30 AM - 12:30 AM, Doctor: Dr. Lin Chung Da\"\n]\n\nexport default ClinicSchedule","import '../App.css';\nimport React from \"react\";\nimport { AudioRecorder } from 'react-audio-voice-recorder';\nimport { PDFDownloadLink, PDFViewer } from '@react-pdf/renderer';\nimport axios from \"axios\";\nimport { useEffect, useState, useRef } from \"react\";\n\nimport Chat from '../components/Chat';\nimport Clinic from '../components/Clinic';\nimport Loading from '../components/Loading';\nimport ClinicSchedule from \"../data/ClinicSchedule\";\nimport { enableButton, disableButton } from '../functions/Utils';\n\nconst MessageRoomPage = ({apiKey, setApiKey, report}) => {\n\n    const [audios, setAudios] = useState([]);\n    const [transcriptions, setTranscriptions] = useState([]);\n    //const [translations, setTranslations] = useState([]);\n    const [chats, setChats] = useState([]);\n    const [audioClickAble, setAudioClickAble] = useState(false);\n    const [summary, setSummary] = useState(\"\");\n    const [clinic, setClinic] = useState(\"\");\n\n    const summaryButtonRef = useRef();\n    const reportLoadingRef = useRef();\n    const bottomLineRef = useRef();\n    const recordButtonRef = useRef();\n    const clearButtonRef = useRef();\n    \n    const whisperModel = \"whisper-1\";\n    const chatgptModel = \"gpt-3.5-turbo\";\n    const urlForWhisper = \"https://api.openai.com/v1/audio/transcriptions\";\n    const urlForChatgpt = \"https://api.openai.com/v1/chat/completions\";\n\n    const sendAudioRequest = async function (blob) {      \n        try{\n            const headers = {\n                \"content-type\":  \"multipart/form-data\",\n                \"Authorization\": `Bearer ${apiKey}`\n            //   \"Authorization\": `Bearer ${process.env.REACT_APP_OPENAI_API_KEY}`\n            };    \n            const formData = new FormData();\n            formData.append(\"file\", blob , \"audio.mp3\")\n            formData.append(\"model\", whisperModel)\n            \n            const response = await axios.post(urlForWhisper, formData, { \"headers\":headers })\n            const transcription = response.data.text;    \n            return transcription\n        }\n        catch (error){\n            console.log(error);\n        }\n    }\n\n    async function sendTranslationRequest (transcription) {\n        try{\n            const headers = {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${apiKey}`\n            };\n            const messages = [\n                    {\"role\": \"system\", \"content\": \"You will be given a ASR transcript. Translate the transcript into English. If the transcript is already in English, then return the original transcript.\"},\n                    {\"role\": \"user\", \"content\": transcription}\n                ]\n            const jsonData = {messages: messages, model: chatgptModel}\n            const response = await axios.post(urlForChatgpt, jsonData, { headers:headers })\n            \n            const translation = response.data.choices[0].message.content\n            return translation;\n        }\n        catch (error) {\n            console.log(error);\n        }\n    }\n\n    //async function sendChatRequest(translation) {\n    async function sendChatRequest(transcription) {\n        try {\n            const headers = {\n                \"content-type\": \"application/json\",\n                \"Authorization\": `Bearer ${apiKey}`\n            };\n            const messages = [\n                    {\"role\": \"system\", \"content\": \"You are a medical diagnosis consultant. You will be given a chest x-ray report, some medical records and health information of a patient. You are responsible to provide a more comprehensive report, and also list out the possible diseases, medical guides and suggestions for the patient. Patients without medical expertise may probably not understand difficult medical terminologies, so try to explain everything in an easy way.\"},\n                ]\n\n            //console.log(translations)\n            console.log(transcriptions)\n            // Multi-turn chats\n            // FIXME: setState() is async, so the translations here are not updated,\n            //        so constraint should be translations.length \n            //        to including the last translation\n            //for (let i = 0; i < translations.length; i ++){\n            //alert(transcriptions.length)\n            // warning: transcriptions.length will always be incorrect due to async of useState\n            for (let i = 0; i < transcriptions.length; i++){\n                messages.push({\"role\": \"user\", \"content\": transcriptions[i]});\n                messages.push({\"role\": \"assistant\", \"content\": chats[i]});\n            }\n            messages.push({\"role\": \"user\", \"content\": transcription}); //due to useState, this transcription has not been appended to transcriptions yet at this moment\n            if (transcriptions.length == 0) // give report information to ChatGPT at first conversation\n                messages.push({\"role\": \"assistant\", \"content\": report});\n\n            const jsonData = {messages: messages, model: chatgptModel}\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        catch (error){\n            console.log(error)\n        }\n    }\n\n    async function sendRequests (audioUrl, audioBlob){\n        const transcription = await sendAudioRequest(audioBlob);\n        setTranscriptions([...transcriptions, transcription]);\n\n        //const translation = await sendTranslationRequest(transcription);\n        //setTranslations([...translations, translation])\n\n        //const chat = await sendChatRequest(translation);\n        const chat = await sendChatRequest(transcription);\n        setChats([...chats, chat])\n    }\n\n    const addAudioElement = async function (audioBlob) {\n        summaryButtonRef.current.style.display = \"none\";\n        disableButton(recordButtonRef)\n        disableButton(clearButtonRef)\n        \n        const audioUrl = URL.createObjectURL(audioBlob);\n        setAudios([...audios, audioUrl]);\n\n        // enforce the length of three lists are equal\n        setTranscriptions([...transcriptions, null]);\n        //setTranslations([...translations, null]);\n        setChats([...chats, null]);\n\n        await sendRequests(audioUrl, audioBlob);\n\n        summaryButtonRef.current.style.display = \"inline\";\n        enableButton(recordButtonRef)\n        enableButton(clearButtonRef)\n    };\n\n    const sendSummaryRequest = async function(transcriptions, report, apiKey)  {\n        const headers = {\n            \"content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${apiKey}`\n        };\n        const messages = [\n                    {\"role\": \"system\", \"content\": \"You are a medical summarization system, and a patient will share his or her current physical condition with you, and you will also receive a chest xray report. Typically, it includes the following four aspects: onset time, triggering factors of symptoms, nature of symptoms, and severity. Please utilize the information provided to summarize these aspects objectively without offering any advice.\"},\n            ]\n        \n        messages.push({\"role\": \"user\", \"content\": \"patient's chest xray report:\"});\n        messages.push({\"role\": \"user\", \"content\": report});\n        messages.push({\"role\": \"user\", \"content\": \"patient's description:\"})\n    \n        for (let i = 0; i < transcriptions.length; i ++){\n            messages.push({\"role\": \"user\", \"content\": transcriptions[i]});\n        }\n        console.log(messages)\n        const jsonData = {messages: messages, model: chatgptModel}\n        try {\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        catch (error){\n            console.log(error)\n            if (error.response.status === 429){\n                const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n                const chat = response.data.choices[0].message.content\n                return chat;\n            }\n            else \n                return \"\"    \n        }\n    }\n    \n    const sendClinicRequest = async function(transcriptions, report, apiKey)  {\n        const headers = {\n            \"content-type\": \"application/json\",\n            \"Authorization\": `Bearer ${apiKey}`\n        };\n        const messages = [\n                    {\"role\": \"system\", \"content\": \"Based on the patient's description and clinic schedule, identify the doctor specializing in the patient's symptoms and provide the corresponding department and clinic hours.\"},\n            ]\n    \n        messages.push({\"role\": \"user\", \"content\": \"patient's description:\"});\n        for (let i = 0; i < transcriptions.length; i++){\n            messages.push({\"role\": \"user\", \"content\": transcriptions[i]});\n        }\n\n        messages.push({\"role\": \"user\", \"content\": \"patient's chest xray report:\"});\n        messages.push({\"role\": \"user\", \"content\": report});\n    \n        messages.push({\"role\": \"user\", \"content\": \"Clinic schedule:\"});\n        for (let i = 0; i < ClinicSchedule.length; i++){\n            messages.push({\"role\": \"user\", \"content\": ClinicSchedule[i]});\n        }    \n        console.log(messages)\n        const jsonData = {messages: messages, model: chatgptModel}\n        try {\n            const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n            const chat = response.data.choices[0].message.content\n            return chat;\n        }\n        catch (error){\n            console.log(error)\n            if (error.response.status === 429){\n                const response = await axios.post(urlForChatgpt, jsonData, {headers: headers} )\n                const chat = response.data.choices[0].message.content\n                return chat;\n            }\n            else \n                return \"\"    \n        }\n    }\n    \n    const generateReport = async function() {\n        //bottomLineRef.current.style.display = \"none\";\n        summaryButtonRef.current.style.display = \"none\";\n        \n        const summary = await sendSummaryRequest(transcriptions, report, apiKey);\n        \n        //reportLoadingRef.current.style.display = \"none\";\n        setSummary(summary);\n        console.log(summary)\n        \n        const clinic = await sendClinicRequest(transcriptions, report, apiKey);\n        setClinic(clinic);\n        console.log(clinic)\n    }\n\n    const continueConversation = () => { \n        setSummary(\"\")\n        setClinic(\"\")\n    }\n\n    const endConversation = () => { \n        resetConversation()\n        setApiKey(\"\")\n    }\n\n    const resetConversation = () => {\n        //summaryButtonRef.current.style.display = \"none\";\n        setAudios([]);\n        setTranscriptions([]);\n        //setTranslations([]);\n        setChats([]);\n        setSummary([]);\n    }\n\n    return (\n        \n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n        {            \n            <>\n            {/* Text for model prediction */}\n            <h1>Online Consultation Room</h1>\n            <div className='msg-container'>\n            { report &&\n            <p align=\"left\"><b>Chest X-ray Report:</b><br></br> {report}</p>\n            }\n            {\n                summary.length > 0 ? \n                <>\n                { summary &&\n                <p align=\"left\"><b>Conversation Summary:</b><br></br> {summary}</p>\n                }\n                { clinic &&\n                <p align=\"left\"><b>Clinic Suggestions:</b><br></br> {clinic}</p>\n                }\n                </>\n                :\n                <></>\n            }\n            </div>\n            <div className='msg-container'>\n            {\n            audios.map((audio, index)=> (\n                <Chat key={index} audio={audios[index]} transcription={transcriptions[index]} chat={chats[index]}\n                        //translation={\"translation: \"+translations[index]} chat={chats[index]}\n                />\n            ))\n            }\n                <button className=\"button-ellipse\" ref={summaryButtonRef} onClick={generateReport} style={{\"display\": \"none\", \"marginBottom\":\"40px\", \"marginTop\":\"40px\" }}>Generate report</button>\n                <div className='center'  ref={reportLoadingRef}  style={{\"display\": \"none\", \"paddingBottom\":\"60px\"}}>\n                    <h2>Waiting for report generation</h2>\n                    <Loading/>\n                </div>\n            </div>\n            <div ref={bottomLineRef}>\n                <div className='bottom-line'></div>\n                <div className='bottom-line-button'>\n                    <div ref={recordButtonRef}>\n                        <AudioRecorder onRecordingComplete={addAudioElement}/>\n                    </div>\n                    <button className='circle-button' ref={clearButtonRef} onClick={resetConversation}  >\n                        <ion-icon name=\"trash\" style={{fontSize: \"17px\"}}></ion-icon>\n                    </button>\n                </div>\n            </div>\n            </>\n        }\n        </div>  \n    );\n}\n\nexport default MessageRoomPage;\n","import '../App.css';\nimport React from \"react\";\nimport { useRef } from \"react\";\n\nimport { validateApiKey } from '../functions/Utils';\n\nconst AskKeyPage = ({setApiKey}) => {\n\n    const inputRef = useRef();\n    const errorRef = useRef();\n    const handleKeyDown = async (event) => {\n        if (event.key === \"Enter\"){\n            try{\n                const apiKey = event.target.value;\n                const test = await validateApiKey(apiKey);\n                if (test == true)\n                    setApiKey(event.target.value)\n                else \n                    errorRef.current.style.visibility = \"visible\";\n            }\n            catch (error){\n                errorRef.current.style.visibility = \"visible\";\n                console.log(error)\n            }\n        }\n    }\n    const handleClick = async (event) => {\n        try{\n            const apiKey = inputRef.current.value\n            const test = await validateApiKey(apiKey) \n            if (test === true)\n                setApiKey(inputRef.current.value)\n            else \n                errorRef.current.style.visibility = \"visible\";\n        }\n        catch (error) {\n            errorRef.current.style.visibility = \"visible\";\n            console.log(error)\n        }\n    }\n\n    return (\n        <div className=\"App ask-key-container\" >\n            <h2>Medical Consultation System</h2>\n            <span>\n                Api Key : <input type=\"text\" onKeyDown={handleKeyDown} ref={inputRef}/>\n            </span>\n            <button onClick={handleClick}>Submit</button>\n            <div className=\"error\" ref={errorRef} style={{\"visibility\": \"hidden\"}}>\n                <h3 style={{\"color\":\"red\"}}>Error!</h3>\n                <p style={{\"color\":\"red\"}}>Please ensure that a correct api key is provided</p>\n            </div> \n        </div>\n    );\n}\n\nexport default AskKeyPage;\n","import { useEffect } from \"react\"\n\nconst useScript = (url, integrity, async = true, crossOrigin = \"anonymous\") => {\n  useEffect(() => {\n    const script = document.createElement(\"script\")\n\n    script.src = url\n\n    script.async = async\n\n    if (integrity) {\n      script.integrity = integrity\n    }\n\n    script.crossOrigin = crossOrigin\n\n    document.body.appendChild(script)\n\n    return () => {\n      document.body.removeChild(script)\n    }\n  }, [url, integrity, async, crossOrigin])\n}\n\nexport default useScript","import './App.css';\nimport React from \"react\";\n// import dotenv_defaults from \"dotenv-defaults\";\nimport { useEffect, useState } from \"react\";\nimport Home from \"./containers/Home\";\nimport ChestReportPage from \"./containers/ChestReportPage\"\nimport MessageRoomPage from \"./containers/MessageRoomPage\"\nimport AskKeyPage from './containers/AskKeyPage';\nimport useScript from './functions/UseScript';\n// dotenv_defaults.config();\n\nfunction App() {\n\n    // useScript(\"https://cdn.jsdelivr.net/npm/ionicons/dist/ionicons/ionicons.esm.js\")\n    useScript(\"https://cdn.jsdelivr.net/npm/ionicons/dist/ionicons/ionicons.js\")\n    const [apiKey, setApiKey] = useState(\"\");\n    const [report, setReport] = useState(\"\");\n\n    return (\n        <div className=\"App\" style={{marginTop:\"30px\"}}>\n            { apiKey.length == 0 ? <AskKeyPage setApiKey = {setApiKey}/>\n              : report.length == 0 ? <ChestReportPage setReport = {setReport}/>\n              : <MessageRoomPage apiKey = {apiKey} setApiKey = {setApiKey} report = {report}/>\n            }\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n        getCLS(onPerfEntry);\n        getFID(onPerfEntry);\n        getFCP(onPerfEntry);\n        getLCP(onPerfEntry);\n        getTTFB(onPerfEntry);\n      });\n    }\n  };\n  \nexport default reportWebVitals;\n  ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\n//import ReactDOM from 'react-dom/client';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport * as serviceWorker from './serviceWorker';\n\n//const rootElement = document.getElementById(\"root\");\n/*ReactDOM.render(\n    <Router>\n        <Routes>*/\n        {/* This route is for home component \n        with exact path \"/\", in component props \n        we passes the imported component*/}\n        //<Route exact path=\"/\" component={App} />    \n\n        {/* This route is for about component \n        with exact path \"/about\", in component \n        props we passes the imported component*/}\n        //Route path=\"/messageroom\" component={MessageRoom} />\n        /*</Routes>\n    </Router>,\n    rootElement\n);*/\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/old.3258e6ca.png\";","module.exports = __webpack_public_path__ + \"static/media/chatgpt.441f1ac2.png\";"],"sourceRoot":""}